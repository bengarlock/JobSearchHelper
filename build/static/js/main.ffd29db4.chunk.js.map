{"version":3,"sources":["Components/Header.js","Components/Menu.js","Media/Resume - Full Stack Developer - v3 - Final.pdf","Media/Resume - Solutions Engineer - v3 - Final.pdf","Media/Resume - Customer Support Engineer - v3 - Final.pdf","Cards/TechButton.js","Components/CompanyInfo.js","Media/Cover Letter - Template.docx","Cards/Template.js","Components/CoverLetterPrint.js","Components/CoverLetterTemplates.js","Cards/Job.js","Components/SocialLinks.js","Cards/Application.js","Components/ApplicationInfo.js","Components/Applications.js","Components/Content.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Header","id","this","props","company","company_name","React","Component","Menu","pageToggle","e","togglePage","target","className","currentPage","onClick","TechButton","state","clicked","onClickHandler","style","backgroundColor","updateTechnologies","tech","setState","Content","job_title","contact","url","applied_before","onChangeHandler","name","value","applications","find","item","toLowerCase","onSubmitHandler","preventDefault","data","technologies","status","packet","method","headers","body","JSON","stringify","fetch","backendUrl","then","res","json","setCompany","renderDocs","href","fullstackresume","download","salesengineerresume","customersupportengineer","renderTechnology","join","map","indexOf","onSubmit","onChange","placeholder","autoComplete","type","Template","toggleTemplate","template","CoverLetterPrint","jobTitle","toUpperCase","ReactHtmlParser","greeting","opening","closing","PrintCoverLetter","trigger","content","componentRef","bodyClass","ref","el","CoverLetterTemplates","letter","header","templates","includes","currentBody","filter","v","push","renderGreetings","currentTemplate","renderOpenings","renderAssetModules","renderClosing","cleanMe","object","replace","renderCoverLetter","coverLetter","Job","navigator","clipboard","writeText","job","document","getElementById","oldButton","console","log","date","Date","dateFormatted","getMonth","getDate","getFullYear","jobTitles","SocialLinks","window","open","renderJobTitleIdes","Application","toggleApplication","application","currentApplication","ApplicationInfo","date_applied","renderApplications","updateApplications","Applications","current_application","applicationId","App","current_page","page","newArray","index","splice","action","updatedApplications","newApplications","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffd29db4.chunk.js","sourcesContent":["import React from \"react\"\nimport \"../Stylesheets/Header.css\"\n\nclass Header extends React.Component {\n\n    render() {\n        return(\n            <>\n                <div id=\"header\">\n                    Job Search Helper\n                </div>\n                {this.props.company.company_name ?\n                    <div id=\"company-name-header\">{this.props.company.company_name}</div> : null}\n            </>\n        )\n    }\n}\n\nexport default Header","\nimport React from \"react\"\nimport \"../Stylesheets/Menu.css\"\n\nclass Menu extends React.Component {\n\n    pageToggle = (e) => {\n        this.props.togglePage(e.target.id)\n    }\n\n\n    render() {\n        return(\n            <div id=\"menu-wrapper\">\n                <ul>\n                    <li className={this.props.currentPage === \"company-info\" ?\n                        \"menu-item-selected\" : \"menu-item\"}\n                        onClick={this.pageToggle}\n                        id=\"company-info\">Company Info\n                    </li>\n\n                    <li className={this.props.currentPage === \"cover-letter\" ?\n                        \"menu-item-selected\" : \"menu-item\"}\n                        onClick={this.pageToggle}\n                        id=\"cover-letter\">Cover Letter Templates\n                    </li>\n\n                    <li className={this.props.currentPage === \"social-links\" ?\n                        \"menu-item-selected\" : \"menu-item\"}\n                        onClick={this.pageToggle}\n                        id=\"social-links\">Social Links\n                    </li>\n                    <li className={this.props.currentPage === \"applications\" ?\n                        \"menu-item-selected\" : \"menu-item\"}\n                        onClick={this.pageToggle}\n                        id=\"applications\">Applications\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Menu","export default __webpack_public_path__ + \"static/media/Resume - Full Stack Developer - v3 - Final.ca99ebb7.pdf\";","export default __webpack_public_path__ + \"static/media/Resume - Solutions Engineer - v3 - Final.20a3dbab.pdf\";","export default __webpack_public_path__ + \"static/media/Resume - Customer Support Engineer - v3 - Final.f0b8d934.pdf\";","import React from \"react\"\nimport \"../Stylesheets/TechButton.css\"\n\n\nclass TechButton extends React.Component {\n\n    state = {\n        clicked: false\n    }\n\n    onClickHandler = (e) => {\n        if (this.state.clicked) {\n            e.target.style.backgroundColor = \"#fff\"\n            this.props.updateTechnologies(this.props.tech, false)\n        } else {\n            e.target.style.backgroundColor = \"#095a37\"\n            this.props.updateTechnologies(this.props.tech, true)\n        }\n        this.setState({\n            clicked: !this.state.clicked\n        })\n    }\n\n    render() {\n        return(\n            <button className=\"tech-button\" onClick={this.onClickHandler}>\n                {this.props.tech}\n            </button>\n        )\n    }\n}\n\nexport default TechButton","import React from \"react\"\nimport \"../Stylesheets/CompanyInfo.css\"\nimport fullstackresume from \"../Media/Resume - Full Stack Developer - v3 - Final.pdf\"\nimport salesengineerresume from \"../Media/Resume - Solutions Engineer - v3 - Final.pdf\"\nimport customersupportengineer from \"../Media/Resume - Customer Support Engineer - v3 - Final.pdf\"\nimport TechButton from \"../Cards/TechButton\";\n\nclass Content extends React.Component {\n\n    state = {\n        company_name: '',\n        job_title: '',\n        contact: '',\n        url: '',\n        applied_before: false,\n    }\n\n    onChangeHandler = (e) => {\n        if (e.target.name === \"company-name\") {\n            let company = e.target.value\n            let check = this.props.company.applications.find(item =>\n                item.company_name.toLowerCase() === company.toLowerCase()\n            )\n            if (check) {\n                this.setState({\n                    applied_before: true\n                })\n            } else {\n                this.setState({\n                    applied_before: false\n                })\n            }\n            this.setState({\n                company_name: e.target.value\n            })\n        } else if (e.target.name === \"job-title\") {\n            this.setState({\n                job_title: e.target.value\n            })\n        } else if (e.target.name === \"contact\") {\n            this.setState({\n                contact: e.target.value\n            })\n        } else if (e.target.name === \"url\") {\n            this.setState({\n                url: e.target.value\n            })\n        }\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault()\n        const data = {\n            company_name: this.state.company_name,\n            job_title: this.state.job_title,\n            url: this.state.url,\n            technologies: this.props.company.technologies,\n            status: \"Applied\",\n            contact: this.state.contact,\n        }\n\n        const packet = {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        }\n\n        fetch(this.props.backendUrl + \"jobapps/\", packet)\n            .then(res => res.json())\n            .then(company => this.props.setCompany(company))\n    }\n\n    renderDocs = () => {\n        return (\n            <div className=\"doc-wrapper\">\n                <h3>Documents</h3>\n                <a href={fullstackresume}\n                   className=\"doc-link\"\n                   download={\"Ben Garlock - \"\n                   + `${this.props.company.company_name}`\n                   + \" - \"\n                   + `${this.props.company.job_title}`\n                   + \" - Resume.pdf\"}>Resume - Full Stack Engineer</a>\n                <a href={salesengineerresume}\n                   className=\"doc-link\"\n                   download={\"Ben Garlock - \"\n                   + `${this.props.company.company_name}`\n                   + \" - \"\n                   + `${this.props.company.job_title}`\n                   + \" - Resume.pdf\"}>Resume - Solutions Engineer</a>\n                <a href={customersupportengineer}\n                   className=\"doc-link\"\n                   download={\"Ben Garlock - \"\n                   + `${this.props.company.company_name}`\n                   + \" - \"\n                   + `${this.props.company.job_title}`\n                   + \" - Resume.pdf\"}>Resume - Customer Support Engineer</a>\n            </div>\n        )\n    }\n\n    renderTechnology = () => {\n        let technologies = [\n            \"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"Ruby on Rails\", \"Postgres\", \"MySQL\",\n            \"React.js\", \"SQL\", \"APIs\", \"Redux\", \"Django\"]\n        return (\n            <>\n                <h3>Required Technologies - {this.props.company.technologies.join(\", \")}</h3>\n                <div id=\"tech-wrapper\">\n                    {technologies.map(tech => <TechButton\n                        key={technologies.indexOf(tech)}\n                        tech={tech}\n                        updateTechnologies={this.props.updateTechnologies}/>)}\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"content-wrapper\">\n                <h3>Company Info</h3>\n                <form id=\"company-form\" onSubmit={this.onSubmitHandler}>\n                    <input name=\"company-name\"\n                           onChange={this.onChangeHandler}\n                           value={this.state.company_name}\n                           placeholder=\"Company Name\"\n                           autoComplete=\"off\"/>\n                           <br />\n                           <div>{this.state.applied_before ? <p>You may have applied here before</p> : null}</div>\n                    <input name=\"job-title\"\n                           onChange={this.onChangeHandler}\n                           value={this.state.job_title}\n                           placeholder=\"Job Title\"\n                           autoComplete=\"off\"/>\n                           <br />\n                    <input name=\"contact\"\n                           onChange={this.onChangeHandler}\n                           value={this.state.contact}\n                           placeholder=\"Contact\"\n                           autoComplete=\"off\"/>\n                    <br />\n                    <input name=\"url\"\n                           onChange={this.onChangeHandler}\n                           value={this.state.url}\n                           placeholder=\"Listing URL\"\n                           autoComplete=\"off\"/>\n                           <br />\n                    <input type=\"submit\"/>\n                </form>\n\n                <div>\n                    {this.props.company.company_name ? this.renderTechnology() : null}\n                </div>\n\n                <div id=\"doc-wrapper\">\n                    {this.props.company.company_name ? this.renderDocs() : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Content","export default __webpack_public_path__ + \"static/media/Cover Letter - Template.453625e2.docx\";","import React from 'react'\nimport \"../Stylesheets/Templates.css\"\n\n\nclass Template extends React.Component {\n\n    state = {\n        clicked: ''\n    }\n\n    componentDidMount() {\n        this.setState({\n            clicked: false\n        })\n    }\n\n    onClickHandler = () => {\n        this.setState({\n            clicked: !this.state.clicked\n        })\n        this.props.toggleTemplate(this.props.template)\n    }\n\n    render() {\n        return(\n            <div className={this.state.clicked ?\n                \"template-item-selected\" : \"template-item\"} onClick={this.onClickHandler}>\n                {this.props.template.name}\n            </div>\n        )\n    }\n}\n\nexport default Template","import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport \"../Stylesheets/CoverLetterPrint.css\"\n\nclass CoverLetterPrint extends React.Component {\n    render() {\n        return (\n            <div id=\"letter-text\">\n\n                <h1>Ben Garlock</h1>\n                <span>\n                    New York, NY |\n                    646-241-6885 |\n                    <a href=\"mailto:ben.garlock@gmail.com\" target=\"_blank\">ben.garlock@gmail.com</a> |\n                    <a href=\"https://github.com/bengarlock\" target=\"_blank\">Github</a> |\n                    <a href=\"https://ben-garlock.medium.com/\" target=\"_blank\">Blog</a> |\n                    <a href=\"https://www.linkedin.com/in/ben-garlock-18400578/\" target=\"_blank\">LinkedIn</a> |\n                    <a href=\"https://www.bengarlock.com/\" target=\"_blank\">Portfolio</a> |\n                </span>\n                <br />\n                <span id=\"job-title-header\">\n                    <b>{this.props.jobTitle.toUpperCase()}</b>\n                </span>\n                <br />\n                <div id=\"line-separator\">\n                </div>\n                <br />\n                <br />\n\n                {ReactHtmlParser(this.props.greeting)}\n                <br /><br />\n                {ReactHtmlParser(this.props.opening)}\n                <br /><br />\n                {ReactHtmlParser(this.props.body.join(\"\"))}\n                {ReactHtmlParser(this.props.closing)}\n            </div>\n        );\n    }\n}\n\nclass PrintCoverLetter extends React.Component {\n    render() {\n        return (\n            <div>\n                <title>Ben Garlock - {this.props.company_name} - {this.props.jobTitle} - Cover Letter</title>\n                <ReactToPrint\n                    trigger={() => <button href=\"#\">Print to PDF</button>}\n                    content={() => this.componentRef}\n                    bodyClass={\"test\"}\n                />\n\n                <CoverLetterPrint  greeting={this.props.greeting}\n                                   jobTitle={this.props.jobTitle}\n                                   opening={this.props.opening}\n                                   body={this.props.body}\n                                   closing={this.props.closing}\n                                   ref={(el) => (this.componentRef = el)} />\n\n            </div>\n        );\n    }\n}\n\nexport default PrintCoverLetter;\n","import React from \"react\"\nimport \"../Stylesheets/CoverLetterTemplate.css\"\nimport coverLetter from \"../Media/Cover Letter - Template.docx\"\nimport Template from \"../Cards/Template\";\nimport ReactHtmlParser from 'react-html-parser';\nimport ReactToPrint from \"react-to-print\";\nimport PrintCoverLetter from \"./CoverLetterPrint\";\n\n\nclass CoverLetterTemplates extends React.Component {\n\n    state = {\n        value: \"Copy\",\n        letter: {\n            header: '',\n            greeting: '{Greeting}',\n            opening: '{Opening}',\n            body: [],\n            closing: '',\n        },\n        templates: [],\n    }\n\n    componentDidMount() {\n        fetch(this.props.backendUrl + \"templates\")\n            .then(res => res.json())\n            .then(data => this.setState({\n                templates: data,\n            }))\n    }\n\n    toggleTemplate = (template) => {\n        if (template.type === \"greeting\") {\n            this.setState({\n                letter: {\n                    greeting: template.body,\n                    opening: this.state.letter.opening,\n                    body: this.state.letter.body,\n                    closing: this.state.letter.closing,\n                }\n            })\n        } else if (template.type === \"opening\") {\n            this.setState({\n                letter: {\n                    greeting: this.state.letter.greeting,\n                    opening: template.body,\n                    body: this.state.letter.body,\n                    closing: this.state.letter.closing,\n                }\n            })\n        } else if (template.type === \"asset\") {\n\n            if (this.state.letter.body.includes(template.body)) {\n                let currentBody = [...this.state.letter.body]\n                currentBody = currentBody.filter(v => v !== template.body)\n\n                this.setState({\n                    letter: {\n                        greeting: this.state.letter.greeting,\n                        opening: this.state.letter.opening,\n                        body: currentBody,\n                        closing: this.state.letter.closing,\n                    }\n                })\n            } else {\n                let currentBody = [...this.state.letter.body]\n                currentBody.push(template.body)\n                this.setState({\n                    letter: {\n                        greeting: this.state.letter.greeting,\n                        opening: this.state.letter.opening,\n                        body: currentBody,\n                        closing: this.state.letter.closing,\n                    }\n                })\n            }\n\n        } else if (template.type === \"closing\") {\n            this.setState({\n                letter: {\n                    greeting: this.state.letter.greeting,\n                    opening: this.state.letter.opening,\n                    body: this.state.letter.body,\n                    closing: template.body,\n                }\n            })\n        }\n    }\n\n    renderGreetings = () => {\n        const greetings = this.state.templates.filter(item => item.type === \"greeting\")\n        return greetings.map(template =>\n            <Template key={template.id}\n                      template={template}\n                      toggleTemplate={this.toggleTemplate}\n                      currentTemplate={this.state.currentTemplate}/>)\n    }\n\n    renderOpenings = () => {\n        const greetings = this.state.templates.filter(item => item.type === \"opening\")\n        return greetings.map(template =>\n            <Template key={template.id}\n                      template={template}\n                      toggleTemplate={this.toggleTemplate}\n                      currentTemplate={this.state.currentTemplate}/>)\n    }\n\n    renderAssetModules = () => {\n        const assets = this.state.templates.filter(item => item.type === \"asset\")\n        return assets.map(template =>\n            <Template key={template.id}\n                      template={template}\n                      toggleTemplate={this.toggleTemplate}\n                      currentTemplate={this.state.currentTemplate} />)\n    }\n\n    renderClosing = () => {\n        const closings = this.state.templates.filter(item => item.type === \"closing\")\n        return closings.map(template =>\n            <Template key={template.id}\n                      template={template}\n                      toggleTemplate={this.toggleTemplate}\n                      currentTemplate={this.state.currentTemplate}/>)\n    }\n\n    cleanMe = (object) => {\n        if (object) {\n            object = object.replace(\"{contact}\", this.props.company.contact)\n            object = object.replace(\"{job_title}\", this.props.company.job_title)\n            object = object.replace(\"{company_name}\", this.props.company.company_name)\n            object = object.replace(\"{b}\", \"<b>\")\n            object = object.replace(\"{/b}\", \"</b>\")\n            return object\n        }\n    }\n\n    renderCoverLetter = () => {\n        let greeting = this.cleanMe(this.state.letter.greeting)\n        let opening = this.cleanMe(this.state.letter.opening)\n        let body = this.state.letter.body.map(item => this.cleanMe(item))\n        let closing = this.cleanMe(this.state.letter.closing)\n\n        return (\n            <PrintCoverLetter\n                greeting={greeting}\n                opening={opening}\n                body={body}\n                closing={closing}\n                company_name={this.props.company.company_name}\n                jobTitle={this.props.company.job_title}/>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"content-wrapper\" id=\"cover-letter-generator\">\n\n                {this.props.company.company_name ? (\n\n                    <>\n                        <div className=\"doc-wrapper\" id=\"template-list\">\n                            <div className=\"template-sub-wrapper\">\n                                <h3>Greetings</h3>\n                                {this.renderGreetings()}\n                                <h3>Openings</h3>\n                                {this.renderOpenings()}\n                                <h3>Assets</h3>\n                                {this.renderAssetModules()}\n                                <h3>Closings</h3>\n                                {this.renderClosing()}\n                            </div>\n                            <div className=\"doc-wrapper\" id=\"doc-download\">\n                                <a href={coverLetter}\n                                   className=\"doc-link\"\n                                   download={\"Ben Garlock - \"\n                                   + `${this.props.company.company_name}`\n                                   + \" - \"\n                                   + `${this.props.company.job_title}`\n                                   + \" - Cover Letter.docx\"}>Cover Letter Template\n                                </a>\n                            </div>\n\n                        </div>\n                        <div className=\"doc-wrapper\" id=\"cover-letter-content\">\n                            <h3>Cover Letter</h3>\n                            {this.renderCoverLetter()}\n                        </div>\n                    </>\n                    )\n                : null}\n            </div>\n        )\n    }\n}\n\nexport default CoverLetterTemplates","import React from 'react'\nimport \"../Stylesheets/Job.css\"\n\nclass Job extends React.Component {\n\n    onClickHandler = (e) => {\n        navigator.clipboard.writeText(this.props.job)\n\n        if (document.getElementById(\"job-selected\")) {\n\n            const oldButton = document.getElementById(\"job-selected\")\n            console.log(oldButton)\n            oldButton.id = null\n        }\n\n        const button = e.target\n        button.id = \"job-selected\"\n\n    }\n\n    render() {\n        return(\n            <button className=\"job\" onClick={this.onClickHandler}>\n                {this.props.job}\n            </button>\n        )\n    }\n}\n\nexport default Job","import React from \"react\"\nimport \"../Stylesheets/SocialLinks.css\"\nimport Job from \"../Cards/Job\";\n\nconst date = new Date()\nconst dateFormatted = date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear()\nconst jobTitles = [\n    \"QA Engineer\", \"Developer Relations\", \"Developer advocacy\", \"Developer Evangelist\",\n    \"Technical solutions engineer\", \"Creative developer\", \"Technical writer\",\n    \"Implementation Specialist\", \"Creative developer\", \"Deployment engineer\", \"Technical service support\",\n    \"Support Engineer\", \"Integration Specialist\", \"Customer Success Manager\", \"Tech Support Engineer\",\n    \"Sales Engineer\", \"Technical Project Manager\", \"Solutions Engineer\", \"Customer Success Engineer\",\n    \"DevOps Engineer\", \"Success Engineer\"\n]\n\n\nclass SocialLinks extends React.Component {\n\n    onClickHandler = (e) => {\n        if (e.target.id === \"linked-in\") {\n            navigator.clipboard.writeText('https://www.linkedin.com/in/ben-garlock-18400578/')\n            e.target.style.backgroundColor = \"#2a603a\"\n        } else if (e.target.id === \"github\") {\n            navigator.clipboard.writeText('https://github.com/bengarlock')\n            e.target.style.backgroundColor = \"#2a603a\"\n        } else if (e.target.id === \"portfolio\") {\n            navigator.clipboard.writeText('https://bengarlock.com')\n            e.target.style.backgroundColor = \"#2a603a\"\n        } else if (e.target.id === \"account-manager-title\") {\n            navigator.clipboard.writeText('Sr. Account Manager')\n            e.target.style.backgroundColor = \"#2a603a\"\n        } else if (e.target.id === \"account-manager-role\") {\n            navigator.clipboard.writeText(\"Directly responsible for maintaining 300+ elite, high-value OpenTable restaurant partnerships.\\n \\n\" +\n                \"Coordinated with software development teams to provide product feedback, deploy new features, and conduct production tests.\\n \\n\" +\n                \"Utilized data and analytical tools to assist OpenTable partners in optimizing best practices and use of the OpenTable \" +\n                \"platform including marketing, business development products, and inventory utilization.\\n \\n\" +\n                \"Lead partner's system conversion efforts from a legacy system built on client-server architecture to a \" +\n                \"cloud-based technology product.\")\n        } else if (e.target.id === \"job-tracker-template\") {\n            navigator.clipboard.writeText(dateFormatted + \"\\t\"\n                + this.props.company.company_name + \"\\t \"\n                + this.props.company.job_title + \"\\t\"\n                + \"Applied\" + \"\\t\"\n                + this.props.company.url)\n        } else if (e.target.id === \"job-tracker-link\") {\n            window.open(\"https://docs.google.com/spreadsheets/d/1NWsGKRt_ffM1FUEJztA5m5rytPTg6fKWvRd7Ua9wFI8/edit#gid=0\")\n        }\n    }\n\n    renderJobTitleIdes = () => {\n        return jobTitles.map(job => <Job key={jobTitles.indexOf(job)} job={job}/>)\n    }\n\n\n    render() {\n        return(\n            <div className=\"content-wrapper\">\n                <h3>Social Links</h3>\n                \n                    <div className='social-link' id=\"linked-in\"\n                         onClick={this.onClickHandler}> LinkedIn </div>\n                    <div className='social-link'  id=\"github\"\n                         onClick={this.onClickHandler}>GitHub</div>\n                    <div className='social-link'  id=\"portfolio\"\n                         onClick={this.onClickHandler}>Portfolio</div>\n\n                <h3>Shortcuts</h3>\n                <div className='social-link' id=\"job-tracker-template\"\n                     onClick={this.onClickHandler}>Data Entry</div>\n                <div className='social-link' id=\"job-tracker-link\"\n                     onClick={this.onClickHandler}>Job Tracker</div>\n\n\n                <h3>Job Titles</h3>\n                <div>\n                    {this.renderJobTitleIdes()}\n                </div>\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default SocialLinks","import React from 'react'\n\n\n\nclass Application extends React.Component {\n\n    onClickHandler = () => {\n        this.props.toggleApplication(this.props.application.id)\n    }\n\n    render() {\n        return(\n            <div className={this.props.application.id === this.props.currentApplication ?\n                \"social-link-selected\" : \"social-link\"}\n                 onClick={this.onClickHandler}>\n                {this.props.application.company_name}\n            </div>\n        )\n    }\n}\n\nexport default Application","import React from 'react'\nimport \"../Stylesheets/ApplicationInfo.css\"\n\nclass ApplicationInfo extends React.Component {\n\n    state = {\n        date_applied: '',\n        company_name: '',\n        job_title: '',\n    }\n\n    onClickHandler = (e) => {\n        const url = this.props.backendUrl + \"jobapps/\" + this.props.application.id + \"/\"\n        const packet = {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"accept\": \"application/json\",\n            }\n        }\n        if (e.target.className === \"delete\") {\n            fetch(url, packet)\n                .then(this.props.renderApplications())\n                .then(this.props.toggleApplication(null))\n                .then(this.props.updateApplications(this.props.application, \"remove\"))\n        }\n    }\n\n\n    render() {\n        return(\n            <div className=\"content-wrapper\">\n                <div id=\"app-item-wrapper\">\n                    <h3>{this.props.application.company_name} Info</h3>\n                    <div className=\"app-item\">\n                        {this.props.application.company_name}\n                    </div>\n                    <div className=\"app-item\">\n                        {this.props.application.date_applied}\n                    </div>\n                    <div className=\"app-item\">\n                        {this.props.application.job_title}\n                    </div>\n                    <div className=\"app-item\">\n                        <a href={this.props.application.url} target=\"_blank\">Job Listing</a>\n                    </div>\n                    <div className=\"app-item\">\n                        {this.props.application.status}\n                    </div>\n                    <div className=\"delete\" onClick={this.onClickHandler}>\n                        DELETE\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ApplicationInfo","import React from 'react'\nimport Application from \"../Cards/Application\";\nimport ApplicationInfo from \"./ApplicationInfo\";\nimport \"../Stylesheets/Applications.css\"\n\nclass Applications extends React.Component {\n\n    state = {\n        current_application: ''\n    }\n\n    toggleApplication = (applicationId) => {\n        this.setState({\n            current_application: applicationId\n        })\n    }\n\n    renderApplications = () => {\n        return this.props.applications.map(application =>\n            <Application\n                key={application.id}\n                application={application}\n                currentApplication={this.state.current_application}\n                toggleApplication={this.toggleApplication}/>)\n    }\n\n\n    render() {\n        return(\n            <>\n                <div className=\"content-wrapper\" id=\"application\">\n\n\n                    <div id=\"application-list-wrapper\">\n                        <h3>Applications</h3>\n                        {this.renderApplications()}\n                    </div>\n                    <div id=\"application-form-wrapper\">\n                        {this.state.current_application ?\n                            <ApplicationInfo\n                                renderApplications={this.renderApplications}\n                                updateApplications={this.props.updateApplications}\n                                toggleApplication={this.toggleApplication}\n                                backendUrl={this.props.backendUrl}\n                                application={this.props.applications.find(\n                                    item=> item.id === this.state.current_application\n                                )}/> : null\n                        }\n                    </div>\n                </div>\n\n\n            </>\n        )\n    }\n}\n\nexport default Applications","import React from \"react\"\nimport CompanyInfo from \"./CompanyInfo\";\nimport \"../Stylesheets/Content.css\"\nimport CoverLetterTemplates from \"./CoverLetterTemplates\";\nimport SocialLinks from \"./SocialLinks\";\nimport Applications from \"./Applications\";\n\nclass Content extends React.Component {\n\n\n    render() {\n        return(\n            <>\n                {this.props.currentPage === \"company-info\" ? <CompanyInfo\n                    updateApplications={this.props.updateApplications}\n                    currentPage={this.props.currentPage}\n                    setCompany={this.props.setCompany}\n                    company={this.props.company}\n                    updateTechnologies={this.props.updateTechnologies}\n                    backendUrl={this.props.backendUrl}/> : null}\n\n                {this.props.currentPage === \"cover-letter\" ? <CoverLetterTemplates\n                    backendUrl={this.props.backendUrl}\n                    company={this.props.company}/> : null}\n\n                {this.props.currentPage === \"social-links\" ? <SocialLinks\n                    company={this.props.company}/> : null}\n\n                {this.props.currentPage === \"applications\" ? <Applications\n                    updateApplications={this.props.updateApplications}\n                    backendUrl={this.props.backendUrl}\n                    applications={this.props.company.applications}/> : null}\n            </>\n        )\n    }\n}\n\nexport default Content","import \"../Stylesheets/App.css\"\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\nimport React from 'react'\n\nconst backendUrl = \"https://www.bengarlock.com:8080/\"\n\nclass App extends React.Component {\n\n    state = {\n        current_page: '',\n        company_name: '',\n        job_title: '',\n        url: '',\n        technologies: [],\n        applications: [],\n        contact: '',\n    }\n\n    componentDidMount() {\n        fetch(backendUrl + \"jobapps/\")\n            .then(res => res.json())\n            .then(applications => this.setState({\n                applications: applications\n            }))\n    }\n\n\n    togglePage = (page) => {\n        this.setState(this.setState({\n            current_page: page\n        }))\n    }\n\n    updateTechnologies = (tech, status) => {\n        if (status) {\n            let newArray = [...this.state.technologies]\n            newArray.push(tech)\n            this.setState({\n                technologies: newArray\n            })\n        } else {\n            let newArray = [...this.state.technologies]\n            const index = newArray.indexOf(tech)\n            newArray.splice(index, 1)\n            this.setState({\n                technologies: newArray\n            })\n        }\n    }\n\n    updateApplications = (application, action) => {\n        if (action === \"remove\") {\n            let newApplications = [...this.state.applications]\n            let updatedApplications = newApplications.filter(item => item.id !== application.id)\n            this.setState({\n                applications: updatedApplications\n            })\n        } else if (action === \"add\") {\n            let newApplications = [...this.state.applications, application]\n            this.setState({\n                applications: newApplications\n            })\n        }\n    }\n\n    setCompany = (company) => {\n        this.updateApplications(company, \"add\")\n\n        this.setState({\n            id: company.id,\n            company_name: company.company_name,\n            job_title: company.job_title,\n            url: company.url,\n            contact: company.contact,\n        })\n    }\n\n\n    render() {\n        return (\n            <>\n                <Header company={this.state}/>\n                <div id=\"menu-content-wrapper\">\n                    <Menu currentPage={this.state.current_page}\n                          togglePage={this.togglePage} />\n                    <Content currentPage={this.state.current_page}\n                             setCompany={this.setCompany}\n                             company={this.state}\n                             updateTechnologies={this.updateTechnologies}\n                             updateApplications={this.updateApplications}\n                             backendUrl={backendUrl}/>\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}